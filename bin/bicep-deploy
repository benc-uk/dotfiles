#!/bin/bash

echo -e "\n\e[34m‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo -e "‚ïë\e[33m       üí™ Bicep Deployer üöÄ\e[34m       ‚ïë"
echo -e "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\e[0m"

which az > /dev/null || { echo -e "üí• Error! Azure CLI not installed"; exit 1; }
test -f ~/.azure/bin/bicep || { echo -e "üí• Error! Bicep not installed. Run 'az bicep install'"; exit 1; }

# Param handling stuff
OPTS=$(getopt -o t:p:l:s:h --long template:,location:,subscription:,parameters:,help -n 'parse-options' -- "$@")
if [ $? != 0 ] ; then echo "Failed parsing options." >&2 ; usage; exit 1 ; fi
eval set -- "$OPTS"

# Param handling stuff
while true; do
  case "$1" in
    -t | --template ) FILE="$2"; shift; shift;;
    -p | --parameters ) PARAMS="$2"; shift; shift;;
    -l | --location ) LOC="$2"; shift; shift;;
    -s | --subscription ) SUB="$2"; shift; shift;;
    -h | --help ) HELP=true; shift ;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

# check locations
if [[ -z $LOC ]]; then
  echo -e "üåç Using default location 'westeurope'"
  LOC="westeurope"
fi

if [[ -z $SUB ]]; then
  SUB=$(az account show --query id -o tsv)
  echo -e "üîë Using default subscription '$(az account show --query name -o tsv)'"
fi

if [[ -z $FILE ]]; then
  echo -e "üí• Error! Template not specified. Use -t or --template to specify a template"
  exit 1
fi

az deployment sub create --verbose \
--template-file "$FILE" \
--location "$LOC" \
--name "bicep-deploy-$(date +%s)" \
--subscription "$SUB" 