# Get eth0 IP address or fallback to local
if command -v ip &> /dev/null; then
  ip=$(ip addr show eth0 | grep "inet\b" | awk '{print $2}' | cut -d/ -f1)
else
  ip=$(hostname -i)
fi

# Get public IP address and cache results
declare publicip_cache_age=99900
if [[ -f /tmp/publicip ]]; then
  publicip_cache_age=$(( $(date +'%s') - $(stat -c %Y /tmp/publicip) ))
fi
# Cache results for 6 hours, as your IP doesn't change that often!
if (( publicip_cache_age > (6*3600) )); then
  curl -m 1 -s ifconfig.me > /tmp/publicip
fi
publicip=$(cat /tmp/publicip)

# Work out where we are running
where="Some Linux system 🤷"
if [[ ! -z $WSL_DISTRO_NAME ]]; then where="Windows Subsystem for Linux v1 💙"; fi
if [[ ! -z $WSL_INTEROP ]]; then where="Windows Subsystem for Linux v2 💚"; fi
if [[ -f /.dockerenv ]]; then where="Inside a Docker container 📦"; fi
if [[ ! -z $REMOTE_CONTAINERS_IPC ]]; then where="Inside a Devcontainer. Let's code! 💻"; fi
if [[ ! -z $ACC_TERM_ID ]]; then where="Azure Cloud Shell ($ACC_LOCATION)\e[37m☁"; fi
if [[ $CODESPACES == "true" ]]; then where="GitHub Codespaces\e[37m🐙"; fi
if [[ "$(lsb_release -i)" =~ "Raspbian" ]]; then where="Raspberry Pi 🍇"; fi

# And what shell is in use (default assume Zsh + P10K)
shelltype="🚀 Oh My Zsh \e[37m& \e[38;5;226mPowerlevel10K"
if [[ $0 =~ "bash" ]]; then shelltype="👍 Standard \e[38;5;226mBash \e[38;5;202mShell"; fi

# lsb_release might not be installed :/
version="Unknown!"
if test -f /etc/os-release; then
  . /etc/os-release
  version=$VERSION
elif command -v lsb_release > /dev/null; then
  version=$(lsb_release -ds)
fi

# Show the banner
echo -e "\e[38;5;192m╭───── \e[38;5;202m$shelltype"
echo -e "\e[38;5;155m├──❱ \e[38;5;135mEnviron: \e[38;5;45m$where"
echo -e "\e[38;5;118m├──❱ \e[38;5;135mKernel:  \e[38;5;45m$(uname -r) 🚦"
echo -e "\e[38;5;40m├──❱ \e[38;5;135mVersion: \e[38;5;45m$version 😸"
echo -e "\e[38;5;34m├──❱ \e[38;5;135mIP:      \e[38;5;45m$ip / $publicip 📡"
echo -e "\e[38;5;28m╰──❱ \e[38;5;135mHost:    \e[38;5;45m$(hostname) 🏠"
echo -e ""
